***
*** ACTUALIZA CATEGORIAS
***
PUSH KEY CLEAR
DEFI WIND WINDCTA FROM 02,00 TO 20,79;
          TITLE "< MANUALES DE MANTENIMIENTO >" ;
          FOOTER " F1=Inc, F2=Mod, F3=Eli, F4=Bus, F9=Secc, F10=Plan, Enter=Sal " ;
          DOUBLE NOFLOAT NOZOOM NOGROW SHADOW COLOR SCHEME 10
ACTI WIND WINDCTA
ON KEY LABEL F1  DO PROCATI
ON KEY LABEL F2  DO PROCATM
ON KEY LABEL F3  DO PROCATE
ON KEY LABEL F4  DO PROCATB
ON KEY LABEL F9  DO PROCSEC
ON KEY LABEL F10 DO PROCPLA
ON KEY LABEL ENTER KEYBOARD '{CTRL+W}'
SELECT MTCAT
BROWSE FIELDS CODCAT:H="Categoria",DESCAT:H="Descripcion",UNIUSO:H="Und. Uso",;
              FUNSECC=FUNSECC():H="Secc?",;
              FUNPLAN=FUNPLAN():H="Plan?";
       NOAPPEND NODELETE NOEDIT NOMENU NOOPTIMIZE REST SAVE IN WINDOW WINDCTA
DEACT WIND WINDCTA
POP KEY
RETURN

************
FUNC FUNSECC
************
SELECT MTSEC
SEEK MTCAT.CODCAT
IF FOUND()
   STORE "Si" TO FUNSECC
ELSE
   STORE "  " TO FUNSECC
ENDIF
RETURN FUNSECC

************
FUNC FUNPLAN
************
SELECT MTPLA
SEEK MTCAT.CODCAT
IF FOUND()
   STORE "Si" TO FUNPLAN
ELSE
   STORE "  " TO FUNPLAN
ENDIF
RETURN FUNPLAN

************
PROC PROCATI
************
PUSH KEY CLEAR
STORE "INCLUIR" TO WFLAGRCTA
SCATT MEMV BLANK
DO WHILE .T.
   SELECT MTCAT
   STORE SPACE(LEN(M.DESCAT)) TO M.DESCAT
   DO GETCAT
   DO SHOWCATS
   IF LASTKEY()=27
      EXIT
   ENDIF
ENDDO
POP KEY
RETURN

************
PROC PROCATM
************
PUSH KEY CLEAR
STORE "MODIFICAR" TO WFLAGRCTA
SELECT MTCAT
IF .NOT. EOF()
   SCATT MEMV
   DO GETCAT
ENDIF
POP KEY
RETURN

************
PROC PROCATE
************
SELECT MTCAT
IF EOF()
   RETURN
ENDIF
PUSH KEY CLEAR
STORE "ELIMINAR" TO WFLAGRCTA
STORE 2 TO WOP
DO CANCACEP WITH WFLAGRCTA
IF WOP=2
   IF RECLOC()
      DELETE
      UNLOCK
   ELSE
      DO PROCNUL
   ENDIF
ENDIF
POP KEY
RETURN

************
PROC PROCATB
************
PUSH KEY CLEAR
STORE "BUSCAR" TO WFLAGRCTA
DEFI WIND WINDBUS FROM 03,5 TO 05,75;
          TITLE  WFLAGRCTA ;
          DOUBLE NOFLOAT NOZOOM NOGROW SHADOW COLOR SCHEME 10
ACTI WIND WINDBUS
DO WHILE .T.
   SCATT MEMV BLANK
   @ 0,1 GET M.CODCAT PICTURE ALLTRIM(WMASKCAT) VALID VALCAT()
   READ
   IF LASTKEY()=27
      EXIT
   ENDIF
   IF M.CODCAT<>SPACE(LEN(M.CODCAT))
      SELECT MTCAT
      SET ORDER TO MTCAT1
      SEEK M.CODCAT
      IF FOUND()
         EXIT
      ELSE
         STORE "NO REGISTRADO, REINTENTE" TO WTEXT
         DO AVISO WITH WTEXT
         LOOP
      ENDIF
   ELSE
      @ 0,LEN(M.CODCAT)+2 GET M.DESCAT
      READ
      IF LASTKEY()=27
         EXIT
      ENDIF
      IF M.DESCAT<>SPACE(LEN(M.DESCAT))
         SELECT MTCAT
         SET ORDER TO MTCAT2
         SEEK ALLTRIM(M.DESCAT)
         IF FOUND()
            EXIT
         ELSE
            STORE "NO REGISTRADO, REINTENTE" TO WTEXT
            DO AVISO WITH WTEXT
            LOOP
         ENDIF
      ENDIF
      EXIT
   ENDIF
ENDDO
SELECT MTCAT
SET ORDER TO MTCAT1
RELE WIND WINDBUS
POP KEY
RETURN

***********
PROC GETCAT
***********
DEFI WIND WINDGETC FROM 03,01 TO 07,79;
          TITLE  WFLAGRCTA ;
          DOUBLE NOFLOAT NOZOOM NOGROW SHADOW COLOR SCHEME 10
ACTI WIND WINDGETC
DO WHILE .T.
   @ 00,01 SAY "Categoria..................:"
   @ 01,01 SAY "Descripcion ...............:"
   @ 02,01 SAY "Unidad del uso (Hr,Km,Etc).:"
   IF WFLAGRCTA="INCLUIR"
      @ 0,30 GET M.CODCAT PICTURE ALLTRIM(WMASKCAT) VALID VALCAT()
      READ
      IF LASTKEY()=27
         EXIT
      ENDIF
      SELECT MTCAT
      SEEK M.CODCAT
      IF FOUND()
         @ 1,30 SAY DESCAT
         STORE "CODIGO YA EXISTE" TO WTEXT
         DO AVISO WITH WTEXT
         LOOP
      ENDIF
      ***
      STORE .T. TO WPADRE
      DO VALCATPA
      IF .NOT.WPADRE
         LOOP
      ENDIF
   ELSE
      @ 0,30 SAY M.CODCAT
   ENDIF
   @ 1,30   GET M.DESCAT VALID VALDES()
   @ 2,30   GET M.UNIUSO
   READ
   IF LASTKEY()=27
      EXIT
   ENDIF
   STORE 1 TO WOP
   DO ACEPCANC WITH WFLAGRCTA
   IF WOP=1
      SELECT MTCAT
      IF WFLAGRCTA="INCLUIR"
         IF FILLOC()
            APPEND BLANK
            GATH MEMV
            UNLOCK ALL
         ELSE
           DO PROCNUL
         ENDIF
      ELSE
         IF RECLOC()
            GATH MEMV
            UNLOCK ALL
         ELSE
            DO PROCNUL
         ENDIF
      ENDIF
   ENDIF
   EXIT
ENDDO
RELE WIND WINDGETC
RETURN

*************
PROC SHOWCATS
*************
RETURN

***********
FUNC VALDES
***********
IF M.DESCAT<>SPACE(LEN(M.DESCAT))
   RETURN .T.
ELSE
   RETURN .F.
ENDIF

************
PROC PROCSEC
************
PUSH KEY CLEAR
DO MTASEC
POP KEY
RETURN

************
PROC PROCPLA
************
PUSH KEY CLEAR
DO MTAPLA
POP KEY
RETURN

